{"version":3,"sources":["slider/3.jpg","components/Header.js","components/Footer.js","components/About.js","components/todo/TodosForm.jsx","components/todo/List.jsx","config.js","components/todo/Todos.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","React","Component","Footer","rel","target","About","src","img","alt","TodosForm","initialState","item","error","state","handleChange","event","name","value","setState","submitForm","props","handleSubmit","preventDefault","this","Form","onSubmit","Row","Col","Control","placeholder","onChange","Button","variant","onClick","List","ListGroup","TransitionGroup","items","reverse","map","CSSTransition","key","timeout","classNames","Item","done","doneItem","removeItem","API_BASE_URL","Todos","filter","deleteItem","find","fetch","headers","Accept","then","response","json","storeItem","getItems","itemsList","data","console","method","body","JSON","stringify","receivedData","errors","log","Container","md","span","offset","Card","as","Body","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f84d2068.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/3.5eddd2ab.jpg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n                <div className=\"container\">\r\n                <a className=\"navbar-brand\" href=\"#!\">TodoApp</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                    </li>\r\n                    </ul>\r\n                </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","import React from 'react';\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <footer className=\"page-footer font-small bg-primary\">\r\n            <div className=\"footer-copyright text-center py-2\">Made with <span className=\"text-danger\"><i className=\"fa fa-heart\"></i></span> by : \r\n                <a className=\"text-dark\" href=\"#!\"> Narayan Aash</a> | <a rel=\"noopener noreferrer\" href=\"https://github.com/narayanaash\" target=\"_blank\"><i className=\"fa fa-github\"></i></a>\r\n            </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\nimport img from '../slider/3.jpg';\r\n\r\nclass About extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1 className=\"text-center pt-5\">About</h1>\r\n                <div className=\"row pt-5 pb-5 mt-2 mb-2\">\r\n                    <div className=\"col-md-6\">\r\n                        <img className=\"img-fluid\" src={img} alt=\"\" />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <p>It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About","import React from 'react';\r\nimport { Button, Form, Col } from 'react-bootstrap';\r\n\r\nclass TodosForm extends React.Component {\r\n    initialState = {\r\n        item: '',\r\n        error: 0,\r\n    }\r\n\r\n    state = this.initialState\r\n\r\n    handleChange = event => {\r\n        const { name, value } = event.target\r\n\r\n        this.setState({\r\n            [name] : value,\r\n            error  : 0,\r\n        })\r\n    }\r\n\r\n    preventDefault(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    submitForm = (props) => {\r\n        const { item } = this.state\r\n\r\n        if (!item) {\r\n            this.setState({\r\n                error: 1,\r\n            })\r\n        } else {\r\n            this.props.handleSubmit(this.state.item)\r\n            this.setState(this.initialState)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { item, error } = this.state\r\n\r\n        return (\r\n            <Form onSubmit={this.preventDefault}>\r\n                <Form.Row>\r\n                    <Col>\r\n                        <Form.Control\r\n                        placeholder=\"Enter todo item...\"\r\n                        name=\"item\"\r\n                        value={item}\r\n                        onChange={this.handleChange}\r\n                        className={error===1?\"border border-danger\":\"\"} />\r\n                    </Col>\r\n                    <Button type=\"submit\" variant=\"outline-primary\" onClick={this.submitForm}><i className=\"fa fa-plus\"></i> Add</Button>\r\n                </Form.Row>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodosForm","import React from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\n// const ListItem = (props) => {\r\n//     const items = [...props.items].reverse().map(item => {\r\n//         return (\r\n//             <ListGroup.Item key={item.id}>{item.done?<del className={item.done?\"text-success\":\"\"}>{item.item}</del>:<span>{item.item}</span>}\r\n//                 <div className=\"float-right\">\r\n//                     <span className={item.done?\"text-success\":\"text-warning\"}><i onClick={() => props.doneItem(item.id)} className=\"fa fa-check-square-o\"></i></span> <span className=\"text-danger ml-3\"> <i onClick={() => props.removeItem(item.id)} className=\"fa fa-trash\"></i></span>\r\n//                 </div>\r\n//             </ListGroup.Item>\r\n//         )\r\n//     })\r\n//     return (\r\n//         items\r\n//     )\r\n// }\r\n\r\nconst List = props => {\r\n    return (\r\n        <ListGroup variant=\"flush\">\r\n            <TransitionGroup>\r\n                {[...props.items].reverse().map(item => (\r\n                    <CSSTransition key={item.id} timeout={500} classNames=\"item\">\r\n                        <ListGroup.Item>{item.done?<del className={item.done?\"text-success\":\"\"}>{item.item}</del>:<span>{item.item}</span>}\r\n                            <div className=\"float-right\">\r\n                                <span className={item.done?\"text-success\":\"text-warning\"}><i onClick={() => props.doneItem(item.id)} className=\"fa fa-check-square-o\"></i></span> <span className=\"text-danger ml-3\"> <i onClick={() => props.removeItem(item.id)} className=\"fa fa-trash\"></i></span>\r\n                            </div>\r\n                        </ListGroup.Item>\r\n                    </CSSTransition>\r\n                ))}\r\n            </TransitionGroup>\r\n        </ListGroup>\r\n    )\r\n}\r\n\r\nexport default List","export const API_BASE_URL = 'http://127.0.0.1:8000/api';","import React from 'react';\r\nimport { Card, Col, Container, Row } from 'react-bootstrap';\r\n// import uuid from 'react-uuid';\r\nimport TodosForm from './TodosForm';\r\nimport List from './List';\r\nimport { API_BASE_URL } from '../../config';\r\n\r\nclass Todos extends React.Component {\r\n    state = {\r\n        items: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getItems();\r\n    }\r\n    async getItems() {\r\n        try {\r\n            const response = await fetch(API_BASE_URL + '/items');\r\n            const itemsList = await response.json();\r\n            this.setState({ items: itemsList.data});\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    async storeItem(item) {\r\n        const response = await fetch(API_BASE_URL + '/item', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                Accept: 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"item\": item\r\n            })\r\n        });\r\n        const receivedData = await response.json();\r\n\r\n        if (receivedData.errors) {\r\n            console.log(receivedData.errors);\r\n        } else {\r\n            this.setState({ items: [...this.state.items, receivedData.data] })\r\n        }\r\n    }\r\n\r\n    async deleteItem(id) {\r\n        await fetch(API_BASE_URL + '/item/' + id, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                Accept: 'application/json'\r\n            }\r\n        });\r\n    }\r\n\r\n    removeItem = id => {\r\n        const { items } = this.state\r\n        this.setState({\r\n            items: items.filter(item => {\r\n                return item.id !== id\r\n            }),\r\n        })\r\n        this.deleteItem(id);\r\n    }\r\n\r\n    doneItem = id => {\r\n        let items = this.state.items\r\n        let targetItem = items.find(item => {return item.id === id})\r\n        targetItem.done = true\r\n        fetch(API_BASE_URL + '/item/' + id, {\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                Accept: 'application/json'\r\n            }\r\n        }).then(response => response.json())\r\n        .then(this.setState({items:items}));\r\n    }\r\n\r\n    handleSubmit = item => {\r\n        this.storeItem(item);\r\n    }\r\n    \r\n    render() {\r\n        const { items } = this.state\r\n        return (\r\n            <Container>\r\n                <Row className=\"\">\r\n                    <Col md={{ span: 6, offset: 3 }}>\r\n                        <Card className=\"my-5 pb-2\">\r\n                            <Card.Header className=\"text-uppercase\" as=\"h5\"><i className=\"fa fa-calendar-minus-o\"></i> Simple Todo App</Card.Header>\r\n                            <Card.Body>\r\n                                <TodosForm handleSubmit={this.handleSubmit} />\r\n                            </Card.Body>\r\n                            <List items={items} removeItem={this.removeItem} doneItem={this.doneItem} />\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Todos","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport About from './components/About';\nimport Todos from './components/todo/Todos';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <Todos />\n            </Route>\n            <Route path=\"/about\" component={About} />\n          </Switch>\n        <Footer />\n    </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}